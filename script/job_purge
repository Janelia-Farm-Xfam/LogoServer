#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long;
use DateTime;
use DateTime::Format::MySQL;

$|++;
main();
1;

sub main {
  my $opts = {};
  GetOptions( $opts, 'help', 'date=s', 'trial', 'verbose') or usage();

  if (exists $opts->{help}) {
    usage();
  }

  my $start_dt = undef;

  if ($opts->{date}) {
    # parse the date in $opts->{date}
    my ($year, $month, $day) = $opts->{date} =~ /^(\d{4})[_-](\d{2})[_-](\d{2})/;
    if (!$year || !$month || !$day) {
      usage();
    }
    $start_dt = DateTime::Format::MySQL->parse_date("$year-$month-$day");
  }
  else {
    my $now = DateTime->now();
    my $two_weeks = DateTime::Duration->new(weeks => 2);
    $start_dt = $now - $two_weeks;
  }

  if (!$opts->{trial}) {
    # go to the results files on the file system
    my @dirs = glob "/opt/data/logos";

    for my $dir (@dirs) {
      warn "clearing out $dir\n" if ($opts->{verbose});
      # find only files in the $dir directory that are not
      # newer than the start date
      `find $dir -type f -d -not -newerct $start_dt -exec rm {} \\;`;
      # remove any empy directories that might be hanging around
      `find $dir -type d -d -empty -exec rm -rf {} \\;`;
    }
    warn "Old jobs have been purged.\n" if ($opts->{verbose});
  }
  else {
    warn "Test Run: No old jobs have been purged.\n" if ($opts->{verbose});
  }



  return;
}

sub usage {
  print qq($0 [options]

  Deletes all jobs from the filesystem that were started more
  than two weeks ago or before a date if specified.

  options:
    -h, --help    : Print this message and exit
    -d, --date    : Specify a date rather than using the defualt of 2 weeks ago.
                    Should be formated like yyyy_mm_dd or yyyy-mm-dd
    -t, --trial   : Do a dry run and don't delete anything.
    -v, --verbose : Print out messages about the number of jobs to be deleted.
);

  exit;
}
